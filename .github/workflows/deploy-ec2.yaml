name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ secrets.GHCR_USERNAME }}/freeswitch

jobs:
  # -------------------------------
  # 1️⃣ Build & Push Docker Image
  # -------------------------------
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Building image $IMAGE_NAME:$IMAGE_TAG"
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
          
          # Optionally, also tag as latest
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

  # -------------------------------
  # 2️⃣ Deploy to EC2 via SSH
  # -------------------------------
  deploy:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}      # ec2-user
          key: ${{ secrets.SERVER_SSH_KEY }}       # PEM private key secret
          port: 22
          script: |
            IMAGE_TAG=${{ github.sha }}
            echo "Logging in to GHCR..."
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

            echo "Stopping old container..."
            docker stop freeswitch || true
            docker rm freeswitch || true

            echo "Pulling Docker image..."
            docker pull $IMAGE_NAME:$IMAGE_TAG

            echo "Starting new container..."
            docker run -d --name freeswitch \
              -p 5060:5060/udp \
              -p 5060:5060/tcp \
              -p 5080:5080/tcp \
              -p 5061:5061/tcp \
              -p 8021:8021/tcp \
              -p 7443:7443/tcp \
              -p 16384-32768:16384-32768/udp \
              $IMAGE_NAME:$IMAGE_TAG
